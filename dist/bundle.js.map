{"version":3,"file":"bundle.js","sources":["../src/js/config.js","../src/js/utils/array.utils.js","../src/js/tools/Events.js","../src/js/utils/math.utils.js","../src/js/tools/LinesGroup.js","../src/js/utils/dom.utils.js","../src/js/components/ChartPreview/Slider.js","../src/js/utils/svg.utils.js","../src/js/tools/Drawing.js","../src/js/components/ChartPreview/ChartPreview.js","../src/js/utils/common.utils.js","../src/js/tools/Line.js","../src/js/utils/date.utils.js","../src/js/components/Chart/Axis.js","../src/js/components/Chart/Scale.js","../src/js/components/Chart/DataFlag.js","../src/js/components/Chart/Chart.js","../src/js/components/ChartLegend.js","../src/js/components/ChartBox.js","../src/js/app.js"],"sourcesContent":["export const seriesTypes = {\n  LINE: 'line',\n  AXIS: 'x'\n};\n\nexport const TOUCH_SUPPORT = 'ontouchstart' in window ;\n\nexport const Y_SCALE_STEPS = 5;\n\nexport const THEMES = ['day', 'night'];\n\nexport const CHART_PREVIEW_PADDING = .07;\n\nexport const WELCOME_MESSAGE_DELAY = 4000;\n\nexport const ONE_DAY = 1000 * 60 * 60 * 24; // in milliseconds\n\n/**\n * Default part of the chart displayed initially\n * @type {number}\n */\nexport const DEFAULT_SCALE = .25;\n\nexport const MIN_DATE_RANGE = 5 * ONE_DAY;\n\n/**\n * Timestamps that differ by less than this constant are considered equal\n * @type {number}\n */\nexport const TIME_COMPARISON_PRECISION = 1000;\n\n/* EVENTS */\n\nexport const lineEvents = {\n  TOGGLE: 'toggle'\n};\n\nexport const linesGroupEvents = {\n  UPDATE_Y_RANGE: 'update-y-range',\n  UPDATE_X_RANGE: 'update-x-range'\n};\n","/**\n * Get {min, max} range of the array of numeric values, within the given indices (including edges), if provided\n * @param {Array<number>} values\n * @param {Bounds?} bounds\n * @returns {Bounds}\n */\nexport function getRange(values, bounds) {\n  if (values.length > 0) {\n    let min = Infinity;\n    let max = -Infinity;\n    let n = bounds ? Math.min(bounds[1], values.length - 1) : values.length - 1;\n\n    for (let i = bounds ? bounds[0] : 0; i <= n; i++) {\n      if (values[i] < min)\n        min = values[i];\n\n      if (values[i] > max)\n        max = values[i];\n    }\n\n    return [min, max];\n  }\n}\n\n/**\n * Find index of the array element matching the given number or being closest larger number,\n * using binary search algorithm and assuming the array is sorted ascendingly\n * @param {Array<number>} values\n * @param {number} x\n * @returns {number}\n */\nexport function findClosestIndex(values, x) {\n  let m = 0;\n  let n = values.length - 1;\n\n  while (m <= n) {\n    let k = (n + m) >> 1;\n\n    if (x > values[k])\n      m = k + 1;\n    else if(x < values[k])\n      n = k - 1;\n    else\n      return k;\n  }\n\n  return m;\n}\n","export class Events {\n  constructor() {\n    this._callbacks = {};\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {Function} callback\n   * @param {Object?} context\n   */\n  subscribe(eventName, callback, context) {\n    if (!this._callbacks[eventName])\n      this._callbacks[eventName] = [];\n\n    this._callbacks[eventName].push(callback.bind(context));\n  }\n\n  /**\n   * @param {string} eventName\n   * @param [data]\n   */\n  next(eventName, data) {\n    const callbacks = this._callbacks && this._callbacks[eventName];\n\n    if (callbacks)\n      for (let i = 0; i < callbacks.length; i++)\n        callbacks[i](data);\n  }\n}\n","export function equals(a, b, eps = Number.EPSILON) {\n  return a <= b + eps && a >= b - eps;\n}\n\nexport function round(x, decimals = 0) {\n  const k = Math.pow(10, decimals);\n  return Math.round(x * k) / k;\n}\n\nexport function roundToMultiplier(x, multiplier) {\n  const rem = x % multiplier;\n  return x - rem + Math.round(rem / multiplier) * multiplier;\n}\n\nexport function formatNumber(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\nexport function roundToNiceNumber(x) {\n  let half = Math.round(x/2);\n  let digitsCount = Math.abs(half).toString().length;\n  let orderOfHalf = Math.pow(10, digitsCount - 1);\n\n  if (x > 10 * orderOfHalf)\n    x = roundToMultiplier(x, orderOfHalf);\n  else if (x > 5 * orderOfHalf)\n    x = roundToMultiplier(x, .5 * orderOfHalf);\n  else if (x > 2 * orderOfHalf)\n    x = roundToMultiplier(x, .2 * orderOfHalf);\n\n  return Math.round(x);\n}\n","import {findClosestIndex, getRange} from \"../utils/array.utils\";\nimport {Events} from \"./Events\";\nimport {lineEvents, linesGroupEvents} from \"../config\";\nimport {roundToMultiplier, roundToNiceNumber} from \"../utils/math.utils\";\n\n\nexport class LinesGroup {\n  constructor(lines, options = {}) {\n    this.events = new Events();\n    this.lines = lines;\n    this.padding = options.padding || 0;\n    this.nSteps = options.nSteps;\n\n    this.xBounds = options.bounds || [this.lines[0].minX, this.lines[0].maxX];\n\n    this._updateYBounds(true);\n    this.forEach(line => line.events.subscribe(lineEvents.TOGGLE, () => {\n      this._scaleCache = null;\n      this._updateYBounds();\n    }));\n  }\n\n  get axis() {\n    return this.lines[0] && this.lines[0].axis;\n  }\n\n  get minX() {\n    return this.xBounds[0];\n  }\n\n  get maxX() {\n    return this.xBounds[1];\n  }\n\n  get maxY() {\n    return this.yBounds[1];\n  }\n\n  get minY() {\n    return this.yBounds[0];\n  }\n\n  forEach(f) {\n    this.lines.forEach(f);\n  }\n\n  /**\n   * Limit displayed parts of the lines from left and right\n   * @param {Bounds} bounds\n   */\n  setHorizontalBounds(bounds) {\n    this.xBounds = bounds;\n    this._latestAxisIndices = null; // invalidate cache\n    this._updateYBounds();\n    this.events.next(linesGroupEvents.UPDATE_X_RANGE);\n  }\n\n  /**\n   * @param {ViewBox} viewBox\n   * @returns {TransformationMatrix}\n   */\n  getHorizontalTransform(viewBox) {\n    const globalMinX = this.lines[0].minX,\n          linesScaleX = this.lines[0].transformationMatrix[0];\n\n    let scaleX = viewBox[0] / (this.maxX - this.minX) / linesScaleX;\n    let translateX = viewBox[0] * (this.minX - globalMinX) / (this.maxX - this.minX) * -1;\n\n    return [scaleX, 0, 0, 1, translateX, 0];\n  }\n\n  /**\n   * @param {ViewBox} viewBox\n   * @param {Line|string} line or key\n   * @returns {TransformationMatrix}\n   */\n  getVerticalTransformForLine(viewBox, line) {\n    let scaleY = viewBox[1] / (this.maxY - this.minY) * (line.maxY - line.minY) / line.viewBox[1];\n    // translation formulas are different for X and Y because transform origin defaults to `top, left`,\n    // which corresponds to maximum Y and minimum X (thus using `minX` but `maxY`);\n    // translateX is multiplied by `-1` to ensure lines are translated to the left\n    let translateY = viewBox[1] * (this.maxY - line.maxY) / (this.maxY - this.minY);\n\n    return [1, 0, 0, scaleY, 0, translateY];\n  }\n\n  finishInteraction() {\n    this._scaleCache = null;\n    this._updateYBounds();\n  }\n\n  _getYBounds() {\n    let values = [];\n    const [i1, i2] = this._getAxisIndicesRange();\n\n    this.lines.forEach(line => {\n      if (line.enabled) {\n        let range = line.getMinMaxWithinIndices(i1, i2);\n        values.push(range[0], range[1]);\n      }\n    });\n\n    return getRange(values) || [];\n  }\n\n  _getAxisIndicesRange() {\n    const axis = this.axis.values;\n\n    // used cached indices to avoid recalculations when horizontal scale was not changed\n    if (!this._latestAxisIndices)\n      this._latestAxisIndices = [\n        findClosestIndex(axis, this.minX) - 1,\n        findClosestIndex(axis, this.maxX)\n      ];\n\n    return this._latestAxisIndices;\n  }\n\n  _updateYBounds(silent) {\n    let oldBounds = this.yBounds;\n    let bounds = this._getYBounds();\n\n    if (!oldBounds)\n      oldBounds = bounds;\n\n    if (this.padding) {\n      bounds[1] += this.padding * (bounds[1] - bounds[0]);\n      bounds[0] -= this.padding * (bounds[1] - bounds[0]);\n    }\n\n    if (this.nSteps)\n      bounds = this._adjustBoundsToScale(bounds);\n\n    this.yBounds = bounds;\n\n    if (!silent && oldBounds[0] !== this.yBounds[0] || oldBounds[1] !== this.yBounds[1])\n      this.events.next(linesGroupEvents.UPDATE_Y_RANGE);\n  }\n\n  _adjustBoundsToScale([min, max]) {\n    // allow at most 90% of the step to be empty at the bottom in order to begin Y axis with zero if possible\n    const allowedBottomPadding = 0.6;\n    const allowedTopPadding = 0.3;\n    // reserve free space at the top to allow changing yBounds without re-scaling\n    const reservedTopPadding = .15;\n\n\n    let diff = max - min;\n    let step = diff / this.nSteps;\n\n    let cache = this._scaleCache;\n\n    if (cache &&\n        cache[0] > min - step * allowedBottomPadding &&\n        cache[1] > max && cache[1] < max + allowedTopPadding * step) {\n      return cache;\n    }\n\n    let scaleMin = Math.max(0, min - step * allowedBottomPadding);\n    let scaleMax = max + step * reservedTopPadding;\n\n    scaleMin = roundToNiceNumber(scaleMin);\n\n    this._scaleCache = [scaleMin, scaleMax];\n\n    return [scaleMin, scaleMax];\n  }\n}\n","/**\n * Create DOM element from HTML string\n * @param {string} html\n * @returns {HTMLElement}\n */\nexport function elementFromString(html) {\n  let tmpl = document.createElement('template');\n  tmpl.innerHTML = html.trim();\n  return tmpl.content.firstChild;\n}\n","import * as DOM from \"../../utils/dom.utils\";\nimport {TOUCH_SUPPORT} from \"../../config\";\n\n\nexport class Slider {\n  constructor(parent, options) {\n    this.parent = parent;\n    this.onChange = options.onChange;\n    this.onFinish = options.onFinish;\n    this.scale = [0, 1];\n    this.minScaleWidth = Math.max(options.minScaleWidth, 0.04);\n  }\n\n  setScale(scale) {\n    if (!this.rendered)\n      this._render();\n\n    this.scale = scale;\n    this._updateSlidingWindow();\n  }\n  \n  _render() {\n    this.slidingWindow = DOM.elementFromString(\n      `<div class=\"sliding-window\">\n        <div class=\"grip left-grip\"></div>\n        <div class=\"grip right-grip\"></div>\n      </div>`);\n\n    this.coverLeft = DOM.elementFromString(`<div class=\"cover cover-left\"></div>`);\n    this.coverRight = DOM.elementFromString(`<div class=\"cover cover-right\"></div>`);\n\n    this.parent.appendChild(this.coverLeft);\n    this.parent.appendChild(this.coverRight);\n    this.parent.appendChild(this.slidingWindow);\n\n    this.rendered = true;\n\n    this._makeDraggable();\n  }\n\n  _updateSlidingWindow() {\n    this.slidingWindow.style.left = this.scale[0] * 100 + '%';\n    this.slidingWindow.style.width = (this.scale[1] - this.scale[0]) * 100 + '%';\n\n    this.coverLeft.style.width = this.scale[0] * 100 + '%';\n    this.coverRight.style.left = this.scale[1] * 100 + '%';\n  }\n\n  _makeDraggable() {\n    let bounds;\n    let registeredTouches = {};\n\n    let onStart = (e) => {\n      bounds = this.parent.getBoundingClientRect();\n      this.parent.classList.add('moving');\n\n      let sliderBounds = this.slidingWindow.getBoundingClientRect();\n      let touchDescriptor = e.changedTouches && e.changedTouches[0];\n      let target = touchDescriptor ? touchDescriptor.target : e.target;\n      let id = touchDescriptor ? touchDescriptor.identifier : 'mouse';\n      let clientX = touchDescriptor && touchDescriptor.clientX || e.clientX;\n      let deltaLeft = (clientX - sliderBounds.left) / bounds.width || 0;\n      let mode = 'move';\n\n      if (target.classList.contains('left-grip'))\n        mode = 'left';\n      else if (target.classList.contains('right-grip'))\n        mode = 'right';\n\n      for (let id in registeredTouches) {\n        if (registeredTouches[id].mode === mode)\n          return; // ignore touch with similar mode\n\n        // transform 'move' touch (either old or new one) into 'right' or 'left' mode (because 'move' mode does not work with other modes)\n        // reset deltaLeft to move slider to the new position of touch\n        if (registeredTouches[id].mode === 'move') {\n          registeredTouches[id].mode = mode === 'left' ? 'right' : 'left';\n          registeredTouches[id].deltaLeft = 0;\n        } else if (mode === 'move') {\n          mode = registeredTouches[id].mode === 'left' ? 'right' : 'left';\n          deltaLeft = 0;\n        }\n      }\n\n      if (Object.keys(registeredTouches).length === 0) { // only for the first touch\n        if (TOUCH_SUPPORT) {\n          // passive: false to prevent page scrolling (by calling e.preventDefault() later);\n          // capture: true to achieve this behavior on iOS\n          document.addEventListener('touchmove', onMove, { passive: false, capture: true });\n          document.addEventListener('touchend', stopDD);\n        } else {\n          document.addEventListener('mousemove', onMove);\n          document.addEventListener('mouseup', stopDD);\n        }\n      }\n\n      registeredTouches[id] = {\n        deltaLeft,\n        mode,\n        touchLeft: (clientX - bounds.left) / bounds.width\n      };\n\n      e.preventDefault();\n    };\n\n    let onMove = (e) => {\n      let [left, right] = this.scale;\n      let width = right - left;\n      let changedTouches = e.changedTouches || [{ identifier: 'mouse', clientX: e.clientX }];\n      let anyUpdates = false;\n\n      let processTouch = ({ deltaLeft, mode, touchLeft}) => {\n        if (mode === 'right') {\n          right = Math.min(1, touchLeft);\n          right = Math.max(left + this.minScaleWidth, right);\n        } else if (mode === 'left') {\n          left = Math.max(0, touchLeft - deltaLeft);\n          left = Math.min(right - this.minScaleWidth, left);\n        } else {\n          left = Math.max(0, touchLeft - deltaLeft);\n          left = Math.min(1 - width, left);\n          right = Math.min(1, left + width);\n        }\n      };\n\n      for (let touch of changedTouches) {\n        let registeredTouch = registeredTouches[touch.identifier];\n\n        if (registeredTouch) {\n          let touchLeft = (touch.clientX - bounds.left) / bounds.width;\n\n          if (registeredTouch.touchLeft !== touchLeft) {\n            registeredTouch.touchLeft = touchLeft; // remember new left coordinate for this touch\n            processTouch(registeredTouch);\n            anyUpdates = true;\n          }\n        }\n      }\n\n      if (anyUpdates) {\n        this.scale = [left, right];\n        this._updateSlidingWindow();\n\n        this.onChange(this.scale);\n      }\n\n      e.preventDefault();\n    };\n\n    let stopDD = (e) => {\n      delete registeredTouches[e.changedTouches ? e.changedTouches[0].identifier : 'mouse'];\n      if (Object.keys(registeredTouches).length === 0) {\n        document.removeEventListener('mousemove', onMove);\n        document.removeEventListener('touchmove', onMove, { capture: true });\n        document.removeEventListener('mouseup', stopDD);\n        document.removeEventListener('touchend', stopDD);\n\n        this.parent.classList.remove('moving');\n        this.onFinish();\n      }\n\n    };\n\n    if (TOUCH_SUPPORT)\n      this.slidingWindow.addEventListener('touchstart', onStart);\n    else\n      this.slidingWindow.addEventListener('mousedown', onStart);\n  }\n}\n","import { round } from \"./math.utils\";\n\n/**\n * Convert array of Point objects into a string for SVG <polyline> element points\n * @param {Array<Point>} points\n * @param {ViewBox} viewBox\n * @returns string\n */\nexport function toPolylinePoints(points, viewBox) {\n  return points.map(([x, y]) => {\n    return `${round(x, 2)},${round(viewBox[1] - y, 2)}`;\n  }).join(' ');\n}\n\n/**\n * Create SVG <polyline> element\n * @param {string} points\n * @param {string?} color\n * @returns {SVGElement}\n */\nexport function createPolyline(points, color = '#000000') {\n  let el = elementFromString(\n    `<polyline points=\"${points}\" stroke=\"${color}\"/>`\n  );\n\n  return el;\n}\n\n/**\n * Create DOM element from HTML string\n * @param {string} html\n * @returns {SVGElement}\n */\nexport function elementFromString(html) {\n  let tmpl = document.createElementNS(\"http://www.w3.org/2000/svg\", 'svg');\n  tmpl.innerHTML = html.trim();\n  return tmpl.firstChild;\n}\n\n/**\n * Apply 2D CSS transformation given by matrix\n * @param {SVGElement} el\n * @param {TransformationMatrix} matrix\n */\nexport function applyTransformationMatrix(el, matrix) {\n  el.style.webkitTransform = `matrix(${matrix.join(',')})`;\n  el.style.transform = `matrix(${matrix.join(',')})`;\n  el.setAttribute('transform', `matrix(${matrix.join(',')})`);\n}\n","import * as SVG from \"../utils/svg.utils\";\nimport {lineEvents, linesGroupEvents, TOUCH_SUPPORT} from \"../config\";\n\n\nexport class Drawing {\n  constructor(viewBox, options = {}) {\n    this.viewBox = viewBox;\n    this.onHover = options.onHover;\n    this.onHoverEnd = options.onHoverEnd;\n\n    this.svgContainer = SVG.elementFromString(\n      `<svg viewBox=\"0 0 ${viewBox[0]} ${viewBox[1]}\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\">\n        <g></g>\n      </svg>`\n    );\n    this.linesContainer = this.svgContainer.firstElementChild;\n    this._pointRadius = this._getPreferredPointRadius();\n  }\n\n  resize(viewBox) {\n    this.viewBox = viewBox;\n    this.svgContainer.setAttribute('viewBox', `0 0 ${viewBox[0]} ${viewBox[1]}`);\n    this._updateTransformations();\n    this._pointRadius = this._getPreferredPointRadius();\n  }\n\n  appendTo(el) {\n    el.appendChild(this.svgContainer);\n  }\n\n  drawLinesGroup(linesGroup) {\n    this.linesGroup = linesGroup;\n    this.svgLines = {};\n\n    this.linesGroup.forEach(line => {\n      this.svgLines[line.key] = SVG.createPolyline(line.svgPoints, line.color);\n      line.events.subscribe(lineEvents.TOGGLE, this._onToggleLine, this);\n    });\n\n    this._updateTransformations();\n\n    for (let key in this.svgLines)\n      this.linesContainer.appendChild(this.svgLines[key]);\n\n    this.linesGroup.events.subscribe(linesGroupEvents.UPDATE_Y_RANGE, this._transformVertically, this);\n    this.linesGroup.events.subscribe(linesGroupEvents.UPDATE_X_RANGE, this._transformHorizontally, this);\n\n    if (this.onHover)\n      this._trackHoverEvents();\n  }\n\n  createPointsGroup() {\n    let points = [];\n\n    this.linesGroup.forEach(line => {\n      if (line.enabled) {\n        let circle = SVG.elementFromString(\n          `<circle r=\"${this._pointRadius}\" class=\"data-point\" stroke=\"${line.color}\"/>`\n        );\n        this.svgContainer.appendChild(circle);\n        points.push(circle);\n      }\n    });\n\n    return points;\n  }\n\n  drawPointsAtIndex(pointsGroup, index) {\n    let i = 0;\n    // assuming points appear in the same order as corresponding lines in linesGroup\n    this.linesGroup.forEach(line => {\n      if (line.enabled) {\n        let circle = pointsGroup[i];\n        let xy = this._getCoordinatesByIndex(line, index);\n\n        circle.setAttribute('cx', xy[0]);\n        circle.setAttribute('cy', xy[1]);\n        i++;\n      }\n    });\n  }\n\n  removePoints(pointsGroup) {\n    pointsGroup.forEach(p => {\n      this.svgContainer.removeChild(p);\n    });\n  }\n\n  _updateTransformations() {\n    this._transformVertically();\n    this._transformHorizontally();\n  }\n\n  _transformVertically() {\n    this.linesGroup.forEach(line => {\n      let svgLine = this.svgLines[line.key];\n      let matrix = this.linesGroup.getVerticalTransformForLine(this.viewBox, line);\n\n      SVG.applyTransformationMatrix(svgLine, matrix);\n    });\n  }\n\n  _transformHorizontally() {\n    let matrix = this.linesGroup.getHorizontalTransform(this.viewBox);\n    SVG.applyTransformationMatrix(this.linesContainer, matrix);\n  }\n\n  _onToggleLine(line) {\n    let polyline = this.svgLines[line.key];\n    polyline.classList.toggle('disabled');\n  }\n\n  _getCoordinatesByIndex(line, i) {\n    let xValue = line.axis.values[i];\n    let yValue = line.values[i];\n\n    return [\n      (xValue - this.linesGroup.minX) / (this.linesGroup.maxX - this.linesGroup.minX) * this.viewBox[0],\n      this.viewBox[1] - (yValue - this.linesGroup.minY) / (this.linesGroup.maxY - this.linesGroup.minY) * this.viewBox[1]\n    ];\n  }\n\n  _trackHoverEvents() {\n    let bounds;\n    let registeredTouches = {};\n\n    let onTouchStart = (e) => {\n      bounds = this.svgContainer.getBoundingClientRect();\n\n      if (Object.keys(registeredTouches).length === 0) {\n        document.addEventListener('touchmove', onTouchMove, { passive: false, capture: true });\n        document.addEventListener('touchend', onTouchEnd);\n      }\n\n      for (let touch of e.changedTouches) {\n        registeredTouches[touch.identifier] = true;\n\n        this.onHover(\n          touch.identifier,\n          this._getXByFraction((touch.clientX - bounds.left) / bounds.width)\n        );\n      }\n    };\n\n    let onTouchMove = (e) => {\n      for (let touch of e.changedTouches) {\n        if (registeredTouches[touch.identifier]) { // only if touch began at svgContainer target\n          this.onHover(\n            touch.identifier,\n            this._getXByFraction((touch.clientX - bounds.left) / bounds.width)\n          );\n        }\n      }\n\n      if (Object.keys(registeredTouches).length > 1)\n        e.preventDefault();\n    };\n\n    let onMouseMove = (e) => {\n      bounds = bounds || this.svgContainer.getBoundingClientRect();\n\n      this.onHover(\n        'mouse',\n        this._getXByFraction((e.clientX - bounds.left) / bounds.width)\n      );\n    };\n\n    let onTouchEnd = (e) => {\n      for (let touch of e.changedTouches) {\n        if (registeredTouches[touch.identifier]) {\n          delete registeredTouches[touch.identifier];\n          this.onHoverEnd(touch.identifier);\n        }\n      }\n\n      if (Object.keys(registeredTouches).length === 0) {\n        document.removeEventListener('touchmove', onTouchMove, { capture: true });\n        document.removeEventListener('touchend', onTouchEnd);\n      }\n    };\n\n    if (TOUCH_SUPPORT)\n      this.svgContainer.addEventListener('touchstart', onTouchStart);\n    else {\n      this.svgContainer.addEventListener('mousemove', onMouseMove);\n      this.svgContainer.addEventListener('mouseleave', () => {\n        bounds = null;\n        this.onHoverEnd('mouse');\n      });\n    }\n  }\n\n  _getXByFraction(fraction) {\n    return this.linesGroup.minX + fraction * (this.linesGroup.maxX - this.linesGroup.minX);\n  }\n\n  _getPreferredPointRadius() {\n    let width = this.viewBox[0];\n    let r = 3.5;\n\n    if (width > 500)\n      r = 4;\n\n    if (width > 800)\n      r = 4.5;\n\n    if (width > 1100)\n      r = 5.5;\n\n    return r;\n  }\n}\n","import {LinesGroup} from \"../../tools/LinesGroup\";\nimport {Slider} from \"./Slider\";\nimport {Drawing} from \"../../tools/Drawing\";\nimport {CHART_PREVIEW_PADDING, MIN_DATE_RANGE} from \"../../config\";\nimport {throttle} from \"../../utils/common.utils\";\n\n\nexport class ChartPreview {\n  constructor(element, lines, options) {\n    this.el = element;\n    this.axis = options.axis;\n    this.initialBounds = options.initialBounds;\n    this.linesGroup = new LinesGroup(lines, {\n      padding: CHART_PREVIEW_PADDING\n    });\n\n    this._updateScaleDefferred = throttle(this._updateScale, 10);\n  }\n\n  setViewBox([width, height]) {\n    this.viewBox = [width, height];\n\n    if (this.drawing)\n      this.drawing.resize(this.viewBox);\n  }\n\n  draw() {\n    this.drawing = new Drawing(this.viewBox);\n    this.drawing.appendTo(this.el);\n\n    this.slider = new Slider(this.el, {\n      minScaleWidth: MIN_DATE_RANGE / (this.axis.max - this.axis.min),\n      onChange: (scale) => {\n        this._updateScaleDefferred(scale);\n      },\n      onFinish: () => {\n        this.onFinishInteractionCallback();\n      }\n    });\n  }\n\n  renderData() {\n    this.drawing.drawLinesGroup(this.linesGroup);\n    this.slider.setScale(\n      this._getScaleByBounds(this.initialBounds)\n    );\n  }\n\n  onUpdateBounds(cb) {\n    this.onUpdateBoundsCallback = cb;\n  }\n\n  onFinishInteraction(cb) {\n    this.onFinishInteractionCallback = cb;\n  }\n\n  _updateScale(scale) {\n    this.onUpdateBoundsCallback(this._getBoundsByScale(scale))\n  }\n\n  _getBoundsByScale(scale) {\n    return [\n      this.axis.min + scale[0] * (this.axis.max - this.axis.min),\n      this.axis.min + scale[1] * (this.axis.max - this.axis.min)\n    ];\n  }\n\n  _getScaleByBounds(bounds) {\n    return [\n      (bounds[0] - this.axis.min) / (this.axis.max - this.axis.min),\n      (bounds[1] - this.axis.min) / (this.axis.max - this.axis.min)\n    ];\n  }\n}\n","export function debounce(fn, delay) {\n  let timeout;\n\n  return function(...args) {\n    clearTimeout(timeout);\n\n    timeout = setTimeout(() => {\n      timeout = null;\n      fn.apply(this, ...args);\n    }, delay);\n  };\n}\n\nexport function throttle(fn, delay = 10) {\n  let context, args;\n  let timeout = null;\n  let previous = 0;\n\n  let later = function() {\n    previous = 0;\n    timeout = null;\n\n    fn.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  return function() {\n    let now = Date.now();\n    if (!previous) previous = now;\n    let rem = delay - (now - previous);\n\n    context = this;\n    args = arguments;\n\n    if (rem <= 0 || rem > delay) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = now;\n\n      fn.apply(context, args);\n\n      if (!timeout) context = args = null;\n    } else if (!timeout) {\n      timeout = setTimeout(later, rem);\n    }\n  };\n}\n","import {getRange} from \"../utils/array.utils\";\nimport * as SVG from '../utils/svg.utils';\nimport {Events} from \"./Events\";\nimport {lineEvents} from \"../config\";\n\n\nexport class Line {\n  /**\n   * @param {Array<number>} values\n   * @param {{\n   *  name: string,\n   *  key: string,\n   *  color: string,\n   *  axis: Axis,\n   *  enabled?: boolean\n   * }} options\n   */\n  constructor(values, options) {\n    this.events = new Events();\n    this.values = values;\n    this.key = options.key;\n    this.axis = options.axis;\n    this.name = options.name;\n    this.color = options.color;\n    this.enabled = options.enabled || true;\n    this._cachedMinMax = {};\n\n    let range = getRange(values);\n    this.minX = this.axis.values[0];\n    this.maxX = this.axis.values[this.axis.values.length - 1];\n    this.minY = range[0];\n    this.maxY = range[1];\n    this.viewBox = [10000, 1000];\n\n    const scaleX = this.viewBox[0] / (this.maxX - this.minX);\n    const scaleY = this.viewBox[1] / (this.maxY - this.minY);\n\n    this.transformationMatrix = [\n      scaleX, 0,\n      0, scaleY,\n      0, 0\n    ];\n\n    this.svgPoints = SVG.toPolylinePoints(\n      this._normalizeToViewBox(),\n      this.viewBox\n    );\n  }\n\n  toggle() {\n    this.enabled = !this.enabled;\n    this.events.next(lineEvents.TOGGLE, this);\n  }\n\n  getMinMaxWithinIndices(i1, i2) {\n    const key = `${i1}:${i2}`;\n\n    if (this._cachedMinMax.key !== key) {\n      // remember the latest result\n      this._cachedMinMax.key = key;\n      this._cachedMinMax.range = getRange(this.values, [i1, i2]);\n    }\n\n    return this._cachedMinMax.range;\n  }\n\n  /**\n   * Normalize points of the line so that they are relative to the line's view box\n   * @returns {Array<Point>}\n   */\n  _normalizeToViewBox() {\n    const [width, height] = this.viewBox;\n    const xValues = this.axis.values,\n      y = this.values;\n    const minX = this.minX,\n      maxX = this.maxX,\n      minY = this.minY,\n      maxY = this.maxY;\n    const dX = maxX - minX,\n      dY = maxY - minY;\n\n    return xValues.map((x, i) => [\n      (x - minX)/dX * width,\n      (y[i] - minY)/dY * height\n    ]);\n  }\n}\n","const year = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst week = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n/**\n * Format given date or timestamp with default configuration\n * @param {number|string|Date} timestampOrDate\n * @returns {string}\n */\nexport function format(timestampOrDate) {\n  let date = new Date(timestampOrDate);\n  return `${year[date.getMonth()]} ${date.getDate()}`;\n}\n\nexport function formatLong(timestampOrDate) {\n  let date = new Date(timestampOrDate);\n  return `${week[date.getDay()]} ${year[date.getMonth()]} ${date.getDate()}`;\n}\n","import * as DOM from '../../utils/dom.utils';\nimport {format} from \"../../utils/date.utils\";\n\n\nexport class Axis {\n  constructor(values, options) {\n    this.values = values;\n    this.bounds = options.bounds;\n    this.width = options.viewBox[0] || 1;\n    this.nSteps = this._getNumberOfSteps();\n  }\n\n  appendTo(container) {\n    this._createElement();\n    container.appendChild(this.el);\n  }\n\n  setBounds(bounds) {\n    this.bounds = bounds;\n    let step = this._getActualTimeStep();\n\n    if (this.initialPD < step) {\n      this.initialPD = step;\n      // hook to fix labels when scaling out too much (so that initial diff becomes less than actual step)\n      this.render();\n    } else {\n      this._move();\n      this._renderLabels();\n    }\n  }\n\n  resize(viewBox) {\n    this.width = viewBox[0];\n    this.nSteps = this._getNumberOfSteps();\n    this.render();\n  }\n\n  render() {\n    this.el.innerHTML = '';\n    this._createNodes();\n    this._renderLabels();\n  }\n\n  finishInteraction() {\n    this.el.classList.add('hidden-axis');\n\n    this.el.addEventListener('transitionend', () => {\n      this.render();\n      this.el.classList.remove('hidden-axis');\n    }, { once: true });\n  }\n\n  _createElement() {\n    this.el = DOM.elementFromString(`<div class=\"x-axis\"></div>`);\n  }\n\n  _createNodes() {\n    let diff = this.bounds[1] - this.bounds[0];\n\n    this.leftmostNode = {\n      x: this.bounds[0],\n      pd: diff, // \"parent-distance\"\n      text: format(this.bounds[0])\n    };\n    this.rightmostNode = {\n      x: this.bounds[1],\n      pd: diff,\n      text: format(this.bounds[1])\n    };\n\n    this.initialPD = diff;\n\n    this._fillNodes(this.leftmostNode, this.rightmostNode, this._getActualTimeStep());\n    this._move();\n  }\n\n  _fillNodes(n1, n2, step) {\n    if (n2.x - n1.x >= step) {\n      let x = (n2.x + n1.x) / 2;\n      let nNew = {\n        x: x,\n        pd: n2.x - x,\n        next: n2,\n        text: format(x)\n      };\n\n      n1.next = nNew;\n\n      this._fillNodes(n1, nNew, step);\n      this._fillNodes(nNew, n2, step);\n    } else {\n      n1.next = n2;\n    }\n  }\n\n  _move() {\n    this._addBranchesOnTheEdges();\n    this._moveAndUpdate();\n  }\n\n  _addBranchesOnTheEdges() {\n    let step = this._getActualTimeStep();\n    let leftNode = this.leftmostNode,\n      rightNode = this.rightmostNode;\n\n    if (leftNode.x >= this.bounds[0] + step / 2) {\n      let newX = leftNode.x - leftNode.pd;\n      this.leftmostNode = {\n        x: newX,\n        text: format(newX),\n        pd: leftNode.pd\n      };\n      this._fillNodes(this.leftmostNode, leftNode, step);\n    }\n\n    if (rightNode.x <= this.bounds[1] - step / 2) {\n      let newX = rightNode.x + rightNode.pd;\n      this.rightmostNode = {\n        x: newX,\n        text: format(newX),\n        pd: rightNode.pd\n      };\n      this._fillNodes(rightNode, this.rightmostNode, step);\n    }\n  }\n\n  _moveAndUpdate() {\n    let diff = this.bounds[1] - this.bounds[0];\n    let step = this._getActualTimeStep();\n\n    let node = this.leftmostNode;\n    let prevNode;\n\n    do {\n      if (node.pd < step / 4) {\n        this._deleteNode(node, prevNode);\n      } else {\n        if (node.next)\n          this._fillNodes(node, node.next, step);\n\n        // move the node\n        node.left = (node.x - this.bounds[0]) / diff;\n        prevNode = node;\n      }\n\n      node = node.next;\n    } while (node);\n  }\n\n  _deleteNode(node, prevNode) {\n    // delete node\n    if (prevNode)\n      prevNode.next = node.next;\n    else\n      this.leftmostNode = node.next;\n\n    if (node.el && node.el.parentElement) {\n      this.el.removeChild(node.el);\n      node.el = null;\n    }\n  }\n\n  _renderLabels() {\n    let diff = this.bounds[1] - this.bounds[0];\n    let step = this._getActualTimeStep();\n    let node = this.leftmostNode;\n\n    do {\n      let opacity = Math.max(0, Math.min(1, 2 * node.pd / step - 1));\n      let left = node.left;\n\n      if (opacity === 0 || left < - step/diff || left > 1 + step/diff) {\n        if (node.el && node.el.parentElement)\n          this.el.removeChild(node.el); // detach but not remove `el` reference in case it will be needed again\n\n        node = node.next;\n        continue;\n      }\n\n      let tx = -Math.max(0, Math.min(100, left * 100));\n\n      if (!node.el)\n        node.el = DOM.elementFromString(\n          `<div class=\"label\">${node.text}</div>`\n        );\n\n      node.el.style.left = left * 100 + '%';\n      node.el.style.opacity = opacity;\n      node.el.style.transform = `translateX(${tx}%)`;\n\n      if (!node.el.parentElement)\n        this.el.appendChild(node.el);\n\n      node = node.next;\n    } while (node);\n  }\n\n  _getNumberOfSteps() {\n    return this.width < 1000 ? 4 : 8;\n  }\n\n  _getActualTimeStep() {\n    let [lo, hi] = this.bounds;\n    let diff = hi -lo;\n    return diff / this.nSteps;\n  }\n}\n","import * as DOM from '../../utils/dom.utils';\nimport {linesGroupEvents} from \"../../config\";\nimport {debounce} from \"../../utils/common.utils\";\nimport {formatNumber, roundToMultiplier, roundToNiceNumber} from \"../../utils/math.utils\";\n\n\nexport class Scale {\n  constructor(linesGroup) {\n    this.linesGroup = linesGroup;\n    this.linesGroup.events.subscribe(linesGroupEvents.UPDATE_Y_RANGE, debounce(this.render, 100), this);\n  }\n\n  appendTo(container) {\n    this.el = DOM.elementFromString(`<div class=\"y-scale\"></div>`);\n    container.appendChild(this.el);\n  }\n\n  render() {\n    let oldGrid = this.grid;\n    this.grid = this._createGrid();\n\n    this._showGrid(this.grid);\n\n    this.min = this.linesGroup.minY;\n    this.max = this.linesGroup.maxY;\n\n    if (oldGrid)\n      this._removeGrid(oldGrid);\n  }\n\n  _createGrid() {\n    let min = this.linesGroup.minY,\n        max = this.linesGroup.maxY;\n    let html = '';\n    let nRows = this.linesGroup.nSteps;\n    let step = (max - min) / (nRows + 0.5); // 0.5 to leave some half of the row at the top empty\n\n    step = roundToNiceNumber(step);\n\n    for (let i = min; i < max; i += step)\n      html += `<div class=\"grid-line ${i === min ? 'edge' : ''}\" style=\"bottom: ${(i - min) / (max - min) * 100}%\">\n          ${this._formatLabel(i, max, min)}\n        </div>`;\n\n    return {\n      min: min,\n      max: max,\n      el: DOM.elementFromString(`<div class=\"grid ${!this.grid ? 'normal-grid' : ''}\">${html}</div>`) // add 'normal-grid' when created first time\n    };\n  }\n\n  _showGrid(grid) {\n    this._updateStyles(grid);\n    this.el.appendChild(grid.el);\n\n    setTimeout(() => {\n      grid.el.classList.add('normal-grid');\n    }, 50); // to trigger animation\n  }\n\n  _removeGrid(grid) {\n    this._updateStyles(grid, .3);\n    grid.el.classList.remove('normal-grid');\n\n    grid.el.addEventListener('transitionend', () => {\n      this.el.removeChild(grid.el);\n    }, { once: true });\n  }\n\n  _updateStyles(grid, opacity = 0) {\n    let existingDiff = this.max - this.min;\n    let gridDiff = grid.max - grid.min;\n\n    grid.el.style.bottom = (grid.min - this.min) / gridDiff * 100 + '%';\n    grid.el.style.height = gridDiff / existingDiff * 100 + '%';\n    grid.el.style.opacity = opacity;\n  }\n\n  _formatLabel(x, max, min) {\n    let mid = (max + min) / 2;\n\n    if (max > 1e6)\n      return (x / 1e6).toFixed(mid < 1e7 ? 2 : (mid < 5e7 ? 1 : 0)) + 'M';\n    else if (max > 1e3)\n      return (x / 1e3).toFixed(mid < 1e4 ? 2 : (mid < 5e4 ? 1 : 0)) + 'K';\n    else\n      return x.toString();\n  }\n}\n","import * as DOM from '../../utils/dom.utils';\nimport {findClosestIndex} from \"../../utils/array.utils\";\nimport {formatLong} from \"../../utils/date.utils\";\nimport {formatNumber} from \"../../utils/math.utils\";\n\n\nexport class DataFlag {\n  constructor(linesGroup, drawing) {\n    this.linesGroup = linesGroup;\n    this.flags = {};\n    this.drawing = drawing;\n  }\n\n  appendTo(container) {\n    this.container = container;\n  }\n\n  showAt(x, identifier) {\n    let i = this._getClosestIndex(x);\n    let flag = this.flags[identifier];\n\n    if (!flag)\n      this.flags[identifier] = flag = {};\n\n    this._moveFlag(flag, i);\n  }\n\n  hide(identifier) {\n    let flag = this.flags[identifier];\n\n    if (flag) {\n      delete this.flags[identifier];\n      flag.layout.line.parentElement.removeChild(flag.layout.line);\n      flag.layout.tooltip.parentElement.removeChild(flag.layout.tooltip);\n      this.drawing.removePoints(flag.layout.points);\n    }\n  }\n\n  _getClosestIndex(x) {\n    let axisValues = this.linesGroup.axis.values;\n    let i2 = findClosestIndex(axisValues, x);\n    let i1 = Math.max(0, i2 - 1);\n\n    return Math.abs(axisValues[i1] - x) > Math.abs(axisValues[i2] - x) ? i2 : i1;\n  }\n\n  _moveFlag(flag, i) {\n    let layout = flag.layout;\n\n    if (!layout)\n      layout = this._createFlagLayout();\n\n    if (flag.index !== i) {\n      flag.index = i;\n      this._updateLayout(layout, flag);\n    }\n\n    if (!flag.layout) {\n      flag.layout = layout;\n      this.container.append(layout.line);\n      this.container.append(layout.tooltip);\n    }\n  }\n\n  _createFlagLayout() {\n    let layout = {};\n\n    layout.line = DOM.elementFromString(\n      `<div class=\"data-flag-line\"></div>`\n    );\n\n    layout.tooltip = DOM.elementFromString(\n      `<div class=\"data-flag-tooltip\">\n          <div class=\"tooltip-date\"></div>\n          <div class=\"tooltip-points\"></div>\n        </div>`\n    );\n\n    layout.date = layout.tooltip.firstElementChild;\n    layout.tooltipDataPoints = layout.tooltip.lastElementChild;\n    layout.points = this.drawing.createPointsGroup();\n\n    return layout;\n  }\n\n  _updateLayout(layout, flag) {\n    let x = this.linesGroup.axis.values[flag.index];\n    let leftShift = this._getLeftShiftByX(x) * 100;\n    let rightShift = 100 - leftShift;\n    let date = formatLong(x);\n    let points = this._getPoints(flag.index);\n\n    let pointsLayout = points.map(p =>\n      `<div class=\"tooltip-point\" style=\"color: ${p.color}\">\n        <div class=\"p-value\">${formatNumber(p.value)}</div>\n        <div class=\"p-name\">${p.name}</div>\n      </div>`).join('');\n\n    layout.date.innerHTML = date;\n    layout.tooltipDataPoints.innerHTML = pointsLayout;\n    layout.line.style.left = leftShift + '%';\n    // setting both left and right to avoid bug with tooltip shrinking when it's at the right\n    layout.tooltip.style.right = rightShift + '%';\n    layout.tooltip.style.left = leftShift + '%';\n    layout.tooltip.style.transform = `translateX(${-leftShift}%)`;\n\n    this.drawing.drawPointsAtIndex(layout.points, flag.index);\n  }\n\n  _getLeftShiftByX(x) {\n    return (x - this.linesGroup.minX) / (this.linesGroup.maxX - this.linesGroup.minX);\n  }\n\n  _getPoints(i) {\n    let p = [];\n\n    this.linesGroup.forEach(line => {\n      if (line.enabled)\n        p.push({\n          name: line.name,\n          color: line.color,\n          value: line.values[i]\n        });\n    });\n\n    return p;\n  }\n}\n","import {LinesGroup} from \"../../tools/LinesGroup\";\nimport {TIME_COMPARISON_PRECISION, Y_SCALE_STEPS} from \"../../config\";\nimport {Axis} from \"./Axis\";\nimport {equals} from \"../../utils/math.utils\";\nimport {Scale} from \"./Scale\";\nimport {Drawing} from \"../../tools/Drawing\";\nimport {DataFlag} from \"./DataFlag\";\n\n\nexport class Chart {\n  constructor(element, lines, options) {\n    this.el = element;\n    this.axis = options.axis;\n    this.bounds = options.bounds;\n    this.linesGroup = new LinesGroup(lines, {\n      bounds: this.bounds,\n      nSteps: Y_SCALE_STEPS\n    });\n  }\n\n  setViewBox(viewBox) {\n    this.viewBox = viewBox;\n\n    if (this.drawing)\n      this.drawing.resize(viewBox);\n\n    if (this.xAxis)\n      this.xAxis.resize(viewBox);\n  }\n\n  draw() {\n    this.drawing = new Drawing(this.viewBox, {\n      onHover: (identifier, x) => {\n        this.dataFlag.showAt(x, identifier);\n      },\n      onHoverEnd: (identifier) => {\n        this.dataFlag.hide(identifier);\n      }\n    });\n\n    this.xAxis = new Axis(this.axis.values, {\n      bounds: this.bounds,\n      viewBox: this.viewBox\n    });\n\n    this.yScale = new Scale(this.linesGroup, {\n\n    });\n\n    this.dataFlag = new DataFlag(this.linesGroup, this.drawing);\n\n    this.xAxis.appendTo(this.el);\n    this.yScale.appendTo(this.el);\n    this.dataFlag.appendTo(this.el);\n    this.drawing.appendTo(this.el);\n  }\n\n  renderData() {\n    this.drawing.drawLinesGroup(this.linesGroup);\n\n    this.xAxis.render();\n    this.yScale.render();\n  }\n\n  setBounds(bounds) {\n    if (equals(bounds[0], this.bounds[0], TIME_COMPARISON_PRECISION) &&\n        equals(bounds[1], this.bounds[1], TIME_COMPARISON_PRECISION))\n      return; // skip any actions if bounds did not actually change\n\n    this.bounds = bounds;\n    this.linesGroup.setHorizontalBounds(bounds);\n    this.xAxis.setBounds(bounds);\n  }\n\n  finishInteraction() {\n    this.xAxis.finishInteraction();\n    this.linesGroup.finishInteraction();\n  }\n}\n","import { elementFromString } from '../utils/dom.utils';\n\n\nexport class ChartLegend {\n  constructor(element, lines) {\n    this.el = element;\n    this.lines = lines;\n    this.values = lines.map(line => ({\n      key: line.key,\n      label: line.name,\n      enabled: line.enabled,\n      color: line.color\n    }));\n  }\n\n  renderData() {\n    this.values.forEach(item => {\n      let button = elementFromString(\n        `<label class=\"legend-button\">\n          <input type=\"checkbox\" value=\"${item.key}\" ${item.enabled ? 'checked=\"checked\"' : ''} />\n          <span class=\"custom-checkbox\" style=\"background-color: ${item.color}\"></span>\n          <span class=\"checkbox-label\">${item.label}</span>\n        </label>`\n      );\n\n      button.querySelector('input').addEventListener('change', (event) => {\n        let line = this.lines.find(l => l.key === event.target.value);\n        line.toggle();\n      });\n\n      this.el.appendChild(button);\n    });\n  }\n}\n","import {seriesTypes, DEFAULT_SCALE, ONE_DAY} from '../config';\nimport {ChartPreview} from './ChartPreview/ChartPreview';\nimport {Line} from \"../tools/Line\";\nimport {Chart} from \"./Chart/Chart\";\nimport {ChartLegend} from \"./ChartLegend\";\nimport {roundToMultiplier} from \"../utils/math.utils\";\n\n\nexport class ChartBox {\n  constructor(container, data, title) {\n    this.container = container;\n    this.title = title;\n\n    this._prepareData(data);\n  }\n\n  render() {\n    this.draw();\n\n    this.chart.renderData();\n    this.preview.renderData();\n    this.legend.renderData();\n  }\n\n  draw() {\n    this._createLayout();\n    this._createComponents();\n    this._connectChartWithPreview();\n\n    this.container.appendChild(this.el);\n\n    this.resize();\n\n    this.chart.draw();\n    this.preview.draw();\n\n  }\n\n  resize() {\n    this.chart.setViewBox([this.layout.chart.clientWidth, this.layout.chart.clientHeight]);\n    this.preview.setViewBox([this.layout.preview.clientWidth, this.layout.preview.clientHeight]);\n  }\n\n  _prepareData({columns, types, names, colors}) {\n    this.lines = [];\n\n    let axisCol = columns.find(column => types[column[0]] === seriesTypes.AXIS);\n\n    this.axis = {\n      key: axisCol[0],\n      values: axisCol.slice(1),\n      min: axisCol[1],\n      max: axisCol[axisCol.length - 1]\n    };\n\n    columns.forEach(column => {\n      const [key, ...values] = column;\n\n      if (types[key] === seriesTypes.LINE)\n        this.lines.push(new Line(values, {\n          key,\n          axis: this.axis,\n          name: names[key],\n          color: colors[key]\n        }));\n    });\n  }\n\n  _createLayout() {\n    this.el = document.createElement('div');\n    this.el.className = 'chart-box';\n    this.el.innerHTML =\n      `<h2 class=\"chart-title\">${this.title}</h2>\n       <div class=\"chart-with-preview\">\n         <div class=\"chart\"></div>\n         <div class=\"chart-preview\"></div>\n       </div>\n       <div class=\"chart-legend\"></div>`;\n\n    const [title, container, legend] = this.el.children;\n\n    this.layout = {\n      title,\n      legend,\n      chart: container.firstElementChild,\n      preview: container.lastElementChild\n    };\n  }\n\n  _createComponents() {\n    const initialBounds = this._getInitialBounds();\n\n    this.preview = new ChartPreview(this.layout.preview, this.lines, {\n      axis: this.axis,\n      initialBounds: initialBounds\n    });\n\n    this.chart = new Chart(this.layout.chart, this.lines, {\n      axis: this.axis,\n      bounds: initialBounds\n    });\n\n    this.legend = new ChartLegend(this.layout.legend, this.lines);\n  }\n\n  _connectChartWithPreview() {\n    this.preview.onUpdateBounds((bounds) => {\n      this.chart.setBounds(bounds);\n    });\n\n    this.preview.onFinishInteraction(() => {\n      this.chart.finishInteraction();\n    });\n  }\n\n  _getInitialBounds() {\n    let lo = this.axis.max - DEFAULT_SCALE * (this.axis.max - this.axis.min);\n\n    return [\n      Math.max(this.axis.min, roundToMultiplier(lo, ONE_DAY)),\n      this.axis.max\n    ];\n  }\n}\n","/**\n * @typedef {[number, number]} Point - [x, y]\n * @typedef {[number, number]} Bounds - [min, max]\n * @typedef {[number, number]} ViewBox - [width, height]\n * @typedef {[number, number, number, number, number, number]} TransformationMatrix - [a, b, c, d, tx, ty]\n */\n\nimport { ChartBox } from './components/ChartBox';\nimport {THEMES, TOUCH_SUPPORT, WELCOME_MESSAGE_DELAY} from './config';\n\n\nexport function startApp(data) {\n  setTheme();\n  renderCharts(data);\n  enableThemeSwitcher();\n  preventDefaultBehavior();\n  showWelcomeMessage();\n}\n\nfunction setTheme(theme) {\n  const switcher = document.getElementById('theme-switcher');\n\n  if (!theme) {\n    let initialTheme;\n\n    if (window.localStorage) {\n      initialTheme = window.localStorage.getItem('css-theme');\n      theme = THEMES.includes(initialTheme) ? initialTheme : THEMES[0];\n    }\n  }\n\n  document.body.setAttribute('data-theme', theme);\n  switcher.firstElementChild.innerText = theme === THEMES[0] ? THEMES[1] : THEMES[0];\n\n  if (window.localStorage)\n    window.localStorage.setItem('css-theme', theme);\n}\n\nfunction renderCharts(data) {\n  const container = document.getElementById('root');\n\n  let charts = data.map((chartData, i) => {\n    return new ChartBox(container, chartData, `Chart Title #${i + 1}`);\n  });\n\n  setTimeout(() => {\n    charts.forEach(chart => chart.render());\n\n    window.addEventListener('resize', () => {\n      charts.forEach(chart => chart.resize());\n    });\n\n    stopLauncher();\n  }, 0);\n\n}\n\nfunction stopLauncher() {\n  let launcher = document.getElementById('launcher');\n\n  launcher.classList.add('done');\n\n  setTimeout(() => {\n    launcher.parentElement.removeChild(launcher);\n    document.getElementsByClassName('theme-switcher')[0].classList.add('fly-in');\n  }, 1000);\n}\n\nfunction enableThemeSwitcher() {\n  const switcher = document.getElementById('theme-switcher');\n  let prevTimeout;\n\n  switcher.addEventListener('click', () => {\n    document.body.classList.add('changing-theme');\n    setTheme(document.body.getAttribute('data-theme') === 'day' ? 'night' : 'day');\n\n    clearTimeout(prevTimeout);\n\n    prevTimeout = setTimeout(() => {\n      document.body.classList.remove('changing-theme');\n    }, 200);\n  });\n}\n\nfunction preventDefaultBehavior() {\n  // prevent zooming on iOS (it does not respect \"user-scalable\" in viewport meta-tag)\n  document.addEventListener('touchmove', (e) => {\n    if (e.scale > 1)\n      e.preventDefault();\n  }, { passive: false, capture: true });\n}\n\nfunction showWelcomeMessage() {\n  if (!TOUCH_SUPPORT)\n    return;\n\n  if (window.localStorage && window.localStorage.getItem('closed-welcome-message'))\n    return;\n\n  setTimeout(() => {\n    let wm = document.getElementById('welcome-message');\n    wm.classList.add('shown');\n    _bindWelcomeMessageEvents();\n  }, WELCOME_MESSAGE_DELAY);\n}\n\n\nfunction _bindWelcomeMessageEvents() {\n  let wm = document.getElementById('welcome-message');\n  let closeBtn = document.getElementById('welcome-message-close');\n\n  closeBtn.addEventListener('click', () => {\n    wm.classList.remove('shown');\n    setTimeout(() => {\n      wm.parentElement.removeChild(wm);\n    }, 500);\n\n    window.localStorage.setItem('closed-welcome-message', 'true');\n  }, { once: true });\n}\n"],"names":["seriesTypes","TOUCH_SUPPORT","window","THEMES","WELCOME_MESSAGE_DELAY","lineEvents","linesGroupEvents","getRange","values","bounds","length","min","Infinity","max","n","Math","i","findClosestIndex","x","m","k","Events","_callbacks","eventName","callback","context","this","push","bind","data","callbacks","equals","a","b","eps","Number","EPSILON","round","decimals","pow","roundToMultiplier","multiplier","rem","roundToNiceNumber","half","digitsCount","abs","toString","orderOfHalf","LinesGroup","lines","options","events","padding","nSteps","xBounds","minX","maxX","_updateYBounds","forEach","line","subscribe","_this","_scaleCache","f","_latestAxisIndices","next","viewBox","globalMinX","linesScaleX","transformationMatrix","maxY","minY","_getAxisIndicesRange","i1","i2","enabled","range","getMinMaxWithinIndices","axis","silent","oldBounds","yBounds","_getYBounds","_adjustBoundsToScale","step","cache","scaleMin","scaleMax","elementFromString","html","tmpl","document","createElement","innerHTML","trim","content","firstChild","Slider","parent","onChange","onFinish","scale","minScaleWidth","rendered","_render","_updateSlidingWindow","slidingWindow","DOM","coverLeft","coverRight","appendChild","_makeDraggable","style","left","width","registeredTouches","onStart","e","getBoundingClientRect","classList","add","sliderBounds","touchDescriptor","changedTouches","target","id","identifier","clientX","deltaLeft","mode","contains","Object","keys","addEventListener","onMove","passive","capture","stopDD","touchLeft","preventDefault","right","anyUpdates","touch","registeredTouch","removeEventListener","remove","createElementNS","applyTransformationMatrix","el","matrix","webkitTransform","join","transform","setAttribute","Drawing","onHover","onHoverEnd","svgContainer","SVG","linesContainer","firstElementChild","_pointRadius","_getPreferredPointRadius","_updateTransformations","linesGroup","key","svgLines","points","color","svgPoints","_onToggleLine","_transformVertically","_transformHorizontally","_trackHoverEvents","circle","_this2","pointsGroup","index","xy","_this3","_getCoordinatesByIndex","p","_this4","removeChild","_this5","getVerticalTransformForLine","getHorizontalTransform","toggle","xValue","yValue","onTouchMove","_this6","_getXByFraction","onTouchEnd","fraction","r","ChartPreview","element","initialBounds","_updateScaleDefferred","fn","args","delay","timeout","previous","later","apply","now","Date","arguments","clearTimeout","setTimeout","throttle","_updateScale","height","drawing","resize","appendTo","slider","onFinishInteractionCallback","drawLinesGroup","setScale","_getScaleByBounds","cb","onUpdateBoundsCallback","_getBoundsByScale","Line","name","_cachedMinMax","scaleX","scaleY","map","y","_normalizeToViewBox","xValues","dX","dY","year","week","format","timestampOrDate","date","getMonth","getDate","Axis","_getNumberOfSteps","container","_createElement","_getActualTimeStep","initialPD","render","_move","_renderLabels","_createNodes","once","diff","leftmostNode","pd","text","rightmostNode","_fillNodes","n1","n2","nNew","_addBranchesOnTheEdges","_moveAndUpdate","leftNode","rightNode","newX","prevNode","node","_deleteNode","parentElement","opacity","tx","lo","Scale","debounce","oldGrid","grid","_createGrid","_showGrid","_removeGrid","_formatLabel","_updateStyles","existingDiff","gridDiff","bottom","mid","toFixed","DataFlag","flags","_getClosestIndex","flag","_moveFlag","layout","tooltip","removePoints","axisValues","_createFlagLayout","_updateLayout","append","tooltipDataPoints","lastElementChild","createPointsGroup","leftShift","_getLeftShiftByX","rightShift","getDay","formatLong","pointsLayout","_getPoints","replace","formatNumber","value","drawPointsAtIndex","Chart","xAxis","dataFlag","showAt","hide","yScale","setHorizontalBounds","setBounds","finishInteraction","ChartLegend","label","item","button","querySelector","event","find","l","ChartBox","title","_prepareData","draw","chart","renderData","preview","legend","_createLayout","_createComponents","_connectChartWithPreview","setViewBox","clientWidth","clientHeight","columns","types","names","colors","axisCol","column","slice","className","children","_getInitialBounds","onUpdateBounds","onFinishInteraction","setTheme","theme","initialTheme","switcher","getElementById","localStorage","getItem","includes","body","innerText","setItem","prevTimeout","charts","chartData","launcher","getElementsByClassName","stopLauncher","getAttribute","wm","_bindWelcomeMessageEvents"],"mappings":"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"}